name: Flutter

on:
  push: 
    branches: 
      - master

  pull_request: 
    branches: 
      - master

jobs: 
  version:
    name: "Generate Version Number"
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v1
      - 
        name: "Fetch all history for all tags and branches"
        run: git fetch --prune --depth=10000
      - 
        name: "Install GitVersion"
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
            versionSpec: '5.2.x'
      - 
        name: "Use GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.2
      - 
        name: "Create version.txt with nuGetVersion"
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - 
        name: "Upload version.txt"
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  buildAndroid: 
    name: "Build Android"
    needs: [ version ]
    runs-on: ubuntu-latest
    steps: 
      - 
        uses: actions/checkout@v1
      - 
        uses: actions/setup-java@v1
        with: 
          java-version: 12.x
      - 
        uses: subosito/flutter-action@v1
        with: 
          channel: stable
          flutter-version: "1.22.0"
      - 
        env: 
          DISPATCHER_DEV_FIREBASE_SECRET: "${{ secrets.DISPATCHER_DEV_FIREBASE_SECRET }}"
        name: "Decode android google-services.json"
        run: "echo $DISPATCHER_DEV_FIREBASE_SECRET > android/app/src/dev/google-services.json"
      - 
        env: 
          DISPATCHER_DEV_LOCAL_SECRET: "${{ secrets.DISPATCHER_DEV_LOCAL_SECRET }}"
        name: "Decode android local.properties"
        run: "echo $DISPATCHER_DEV_LOCAL_SECRET > android/local.properties"
      - 
        env: 
          DISPATCHER_DEV_ENV_CONFIG_SECRET: "${{ secrets.DISPATCHER_DEV_ENV_CONFIG_SECRET }}"
        name: "Decode environment config"
        run: "echo $DISPATCHER_DEV_ENV_CONFIG_SECRET > lib/env_config.dart"
      - 
        name: "Get version.txt"
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - 
        name: "Read version"
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - 
        name: "Flutter get"
        run: "flutter pub get"
      - 
        name: "Flutter build dev"
        run: "flutter build appbundle -t lib/main_dev.dart --flavor dev --verbose"

  buildIos:
    name: "Build iOS"
    needs: [ version ]
    runs-on: macos-latest
    steps:
      - 
        uses: actions/checkout@v1
      - 
        uses: actions/setup-java@v1
        with: 
          java-version: 12.x
      - 
        uses: subosito/flutter-action@v1
        with: 
          channel: stable
          flutter-version: "1.22.0"
      - 
        env: 
          DISPATCHER_DEV_ENV_CONFIG_SECRET: "${{ secrets.DISPATCHER_DEV_ENV_CONFIG_SECRET }}"
        name: "Decode environment config"
        run: "echo $DISPATCHER_DEV_ENV_CONFIG_SECRET > lib/env_config.dart"
      - 
        name: "Get version.txt"
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - 
        name: "Read version"
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - 
        name: "Flutter get"
        run: "flutter pub get"
      - 
        name: "Flutter build dev"
        run: "flutter build ios -t lib/main_dev.dart --no-codesign --verbose"

  buildFirebase:
    name: "Build Firebase Functions"
    needs: [ version ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: firebase/functions
    steps:
      - 
        name: "Checkout Repo"
        uses: actions/checkout@master
      - 
        name: "Install Dependencies"
        run: npm install
      - 
        name: "Build"
        run: npm run build
      - 
        name: "Archive Production Artifact"
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist

  deployFirebase: 
    name: "Deploy Firebase Functions"
    needs: [ version, buildFirebase ]
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout Repo"
        uses: actions/checkout@master
      - 
        name: "Download Artifact"
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - 
        name: "Deploy Functions to Firebase"
        uses: w9jds/firebase-action@master
        with:
          args: "deploy --only functions --project dispatcher-dev"
        env:
          FIREBASE_TOKEN: ${{ secrets.DISPATCHER_DEV_FIREBASE_TOKEN }}